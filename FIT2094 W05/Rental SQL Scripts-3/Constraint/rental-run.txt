https://powcoder.com
代写代考加微信 powcoder
Assignment Project Exam Help
Add WeChat powcoder
https://powcoder.com
代写代考加微信 powcoder
Assignment Project Exam Help
Add WeChat powcoder
SQL> 
SQL> -- Database Teaching Team
SQL> -- Logical Rental Model Schema script file
SQL> -- Schema file includes example constraint to control pay_type
SQL> 
SQL> -- Added drop commands for sequences
SQL> 
SQL> DROP SEQUENCE damage_dam_no_seq;

Sequence DAMAGE_DAM_NO_SEQ dropped.

SQL> 
SQL> DROP SEQUENCE maintenance_maint_no_seq;

Sequence MAINTENANCE_MAINT_NO_SEQ dropped.

SQL> 
SQL> DROP SEQUENCE owner_owner_no_seq;

Sequence OWNER_OWNER_NO_SEQ dropped.

SQL> 
SQL> DROP SEQUENCE payment_pay_no_seq;

Sequence PAYMENT_PAY_NO_SEQ dropped.

SQL> 
SQL> DROP SEQUENCE property_prop_no_seq;

Sequence PROPERTY_PROP_NO_SEQ dropped.

SQL> 
SQL> DROP SEQUENCE tenant_ten_no_seq;

Sequence TENANT_TEN_NO_SEQ dropped.

SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0806
SQL> 
SQL> DROP TABLE damage CASCADE CONSTRAINTS;

Table DAMAGE dropped.

SQL> 
SQL> DROP TABLE maintenance CASCADE CONSTRAINTS;

Table MAINTENANCE dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE payment CASCADE CONSTRAINTS;

Table PAYMENT dropped.

SQL> 
SQL> DROP TABLE property CASCADE CONSTRAINTS;

Table PROPERTY dropped.

SQL> 
SQL> DROP TABLE rent CASCADE CONSTRAINTS;

Table RENT dropped.

SQL> 
SQL> DROP TABLE tenant CASCADE CONSTRAINTS;

Table TENANT dropped.

SQL> 
SQL> CREATE TABLE damage (
  2      dam_no     NUMBER(6) NOT NULL,
  3      dam_date   DATE NOT NULL,
  4      dam_type   VARCHAR2(20) NOT NULL,
  5      dam_cost   NUMBER(6,2) NOT NULL,
  6      ten_no     NUMBER(4) NOT NULL,
  7      prop_no    NUMBER(4) NOT NULL
  8  );

Table DAMAGE created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_no IS
  2      'Unique identifier for damage to property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_date IS
  2      'Date damage occured';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_type IS
  2      'Type of damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_cost IS
  2      'Cost of repairs for damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.ten_no IS
  2      'Unique identifier for tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.prop_no IS
  2      'Unique property identifier';

Comment created.

SQL> 
SQL> ALTER TABLE damage ADD CONSTRAINT damage_pk PRIMARY KEY ( dam_no );

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE damage
  2      ADD CONSTRAINT damage_nk UNIQUE ( dam_date,
  3                                        ten_no,
  4                                        prop_no );

Table DAMAGE altered.

SQL> 
SQL> CREATE TABLE maintenance (
  2      maint_no     NUMBER(4) NOT NULL,
  3      maint_date   DATE NOT NULL,
  4      maint_type   VARCHAR2(10) NOT NULL,
  5      maint_cost   NUMBER(8,2) NOT NULL,
  6      prop_no      NUMBER(4) NOT NULL
  7  );

Table MAINTENANCE created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_no IS
  2      'Unique identifier for each maintenance item';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_date IS
  2      'Date maintenance was carried out';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_type IS
  2      'Type of maintenace carried out';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_cost IS
  2      'Cost of maintenace item';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.prop_no IS
  2      'Unique property identifier';

Comment created.

SQL> 
SQL> ALTER TABLE maintenance ADD CONSTRAINT maintenance_pk PRIMARY KEY ( maint_no );

Table MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE maintenance ADD CONSTRAINT maintenance_nk UNIQUE ( maint_date,
  2                                                                 prop_no );

Table MAINTENANCE altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_no     NUMBER(4) NOT NULL,
  3      owner_name   VARCHAR2(20) NOT NULL
  4  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_no IS
  2      'Unique identifier for owner ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_name IS
  2      'Name of property owner';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_no );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE payment (
  2      pay_no       NUMBER(6) NOT NULL,
  3      pay_date     DATE NOT NULL,
  4      pay_type     CHAR(1) NOT NULL,
  5      pay_amount   NUMBER(6,2) NOT NULL,
  6      ten_no       NUMBER(4) NOT NULL,
  7      prop_no      NUMBER(4) NOT NULL,
  8      dam_no       NUMBER(6)
  9  );

Table PAYMENT created.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT chk_pay_type CHECK ( pay_type IN (
  3          'B',
  4          'D',
  5          'R'
  6      ) );

Table PAYMENT altered.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_no IS
  2      'Receipt number of payment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_date IS
  2      'Date of payment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_type IS
  2      'Payment type (R=Rent, B=Bond, D=Damage)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_amount IS
  2      'Amount of payment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.ten_no IS
  2      'Unique identifier for tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.prop_no IS
  2      'Unique property identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.dam_no IS
  2      'Unique identifier for damage to property';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX payment__idx ON
  2      payment (
  3          dam_no
  4      ASC );

INDEX PAYMENT__IDX created.

SQL> 
SQL> ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( pay_no );

Table PAYMENT altered.

SQL> 
SQL> CREATE TABLE property (
  2      prop_no        NUMBER(4) NOT NULL,
  3      prop_address   VARCHAR2(40) NOT NULL,
  4      prop_value     NUMBER(10,2) NOT NULL,
  5      owner_no       NUMBER(4) NOT NULL
  6  );

Table PROPERTY created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_no IS
  2      'Unique property identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_address IS
  2      'Address of property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_value IS
  2      'Value of property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.owner_no IS
  2      'Unique identifier for owner ';

Comment created.

SQL> 
SQL> ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( prop_no );

Table PROPERTY altered.

SQL> 
SQL> CREATE TABLE rent (
  2      ten_no       NUMBER(4) NOT NULL,
  3      prop_no      NUMBER(4) NOT NULL,
  4      rent_bond    NUMBER(6,2) NOT NULL,
  5      rent_lease   NUMBER(2) NOT NULL
  6  );

Table RENT created.

SQL> 
SQL> COMMENT ON COLUMN rent.ten_no IS
  2      'Unique identifier for tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.prop_no IS
  2      'Unique property identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_bond IS
  2      'Bond paid by tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_lease IS
  2      'Period in months for lease';

Comment created.

SQL> 
SQL> ALTER TABLE rent ADD CONSTRAINT rent_pk PRIMARY KEY ( ten_no,
  2                                                        prop_no );

Table RENT altered.

SQL> 
SQL> CREATE TABLE tenant (
  2      ten_no        NUMBER(4) NOT NULL,
  3      ten_family    VARCHAR2(20) NOT NULL,
  4      ten_given     VARCHAR2(20) NOT NULL,
  5      ten_address   VARCHAR2(40) NOT NULL,
  6      ten_phone     CHAR(10)
  7  );

Table TENANT created.

SQL> 
SQL> COMMENT ON COLUMN tenant.ten_no IS
  2      'Unique identifier for tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.ten_family IS
  2      'Family name of tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.ten_given IS
  2      'Given name of tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.ten_address IS
  2      'Contact address for tenant';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.ten_phone IS
  2      'Phone number of tenant ';

Comment created.

SQL> 
SQL> ALTER TABLE tenant ADD CONSTRAINT tenant_pk PRIMARY KEY ( ten_no );

Table TENANT altered.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT damage_payment FOREIGN KEY ( dam_no )
  3          REFERENCES damage ( dam_no );

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT owner_property FOREIGN KEY ( owner_no )
  3          REFERENCES owner ( owner_no );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE maintenance
  2      ADD CONSTRAINT property_maintenance FOREIGN KEY ( prop_no )
  3          REFERENCES property ( prop_no );

Table MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE rent
  2      ADD CONSTRAINT property_rent FOREIGN KEY ( prop_no )
  3          REFERENCES property ( prop_no );

Table RENT altered.

SQL> 
SQL> ALTER TABLE damage
  2      ADD CONSTRAINT rent_damage FOREIGN KEY ( ten_no,
  3                                               prop_no )
  4          REFERENCES rent ( ten_no,
  5                            prop_no );

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT rent_payment FOREIGN KEY ( ten_no,
  3                                                prop_no )
  4          REFERENCES rent ( ten_no,
  5                            prop_no );

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE rent
  2      ADD CONSTRAINT tenant_rent FOREIGN KEY ( ten_no )
  3          REFERENCES tenant ( ten_no );

Table RENT altered.

SQL> 
SQL> CREATE SEQUENCE damage_dam_no_seq START WITH 100 NOCACHE ORDER;

Sequence DAMAGE_DAM_NO_SEQ created.

SQL> 
SQL> CREATE SEQUENCE maintenance_maint_no_seq START WITH 100 NOCACHE ORDER;

Sequence MAINTENANCE_MAINT_NO_SEQ created.

SQL> 
SQL> CREATE SEQUENCE owner_owner_no_seq START WITH 100 NOCACHE ORDER;

Sequence OWNER_OWNER_NO_SEQ created.

SQL> 
SQL> CREATE SEQUENCE payment_pay_no_seq START WITH 100 NOCACHE ORDER;

Sequence PAYMENT_PAY_NO_SEQ created.

SQL> 
SQL> CREATE SEQUENCE property_prop_no_seq START WITH 100 NOCACHE ORDER;

Sequence PROPERTY_PROP_NO_SEQ created.

SQL> 
SQL> CREATE SEQUENCE tenant_ten_no_seq START WITH 100 NOCACHE ORDER;

Sequence TENANT_TEN_NO_SEQ created.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                             7
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             17
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          6
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> -----------------------------------------------------
SQL> set echo off
